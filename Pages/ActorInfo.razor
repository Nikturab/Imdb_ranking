@page "/actor/{personId:int}"

@using MovieRanking.Data
@inject ActorsService ActorsService

<h1>Person info</h1>

@if (_person == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table>
        <tr>
            <td>ID: </td>
            <td>@personId</td>
        </tr>
        <tr>
            <td>Name: </td>
            <td>@_person.Name</td>
        </tr>
        
        
    </table>
    
    <center><h4>Movies</h4></center>
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Title </th>
            <th>Rate </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var sm in _person.MoviePersons)
        {
            <tr>
                <td>#@sm.Movie.Id</td>
                <td><a href="/movie/@sm.Movie.Id">@sm.Movie.Title</a></td>
                <td>@sm.Movie.Rate</td>
            </tr>
        }
        </tbody>
    </table>

    
    <center><h4>Directed Movies</h4></center>
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Title </th>
            <th>Rate </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var sm in _directedMovies)
        {
            <tr>
                <td>#@sm.Id</td>
                <td><a href="/movie/@sm.Id">@sm.Title</a></td>
                <td>@sm.Rate</td>
            </tr>
        }
        </tbody>
    </table>

    

}

@code {
    [Parameter] public int personId  { get; set; }
    Person _person;
    Movie[] _directedMovies;
  
    
    protected override async Task OnInitializedAsync()
    {
        _person = await ActorsService.GetPerson(personId);
        _directedMovies = await ActorsService.GetMoviesDirectedBy(personId);
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await OnInitializedAsync();
    }

}