@page "/movie/{movieId:int}"

@using MovieRanking.Data
@inject MovieService MovieService

<h1>Movie info</h1>

@if (_movie == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    
    <table>
        <tr>
            <td>ID: </td>
            <td>@movieId</td>
        </tr>
        <tr>
            <td>Title: </td>
            <td>@_movie.Title</td>
        </tr>
        <tr>
            <td>Director: </td>
            <td>@_movie.Director.Name</td>
        </tr>
        <tr>
            <td>Tags: </td>
            <td>
                @foreach (var tag in _movie.Tags)
                {
                    <a href="/tag/@tag.TagId">@tag.TagId, </a>
                }
            </td>
        </tr>
        
        
        <tr>
            <td>Actors: </td>
            <td>
                @foreach (var actor in _movie.ActorsProfiles)
                {
                    <a href="/actor/@actor.Id">@actor.Name, </a>
                }
            </td>
        </tr>
        <tr>
            <td>Images:</td><td id="imagesContainer"></td>
        </tr>
        
    </table>
    
    <center><h4>Similar movies</h4></center>
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Title </th>
            <th>Rate </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var sm in _movie._SimilarMovies)
        {
            <tr>
                <td>#@sm.Id</td>
                <td><a href="/movie/@sm.Id">@sm.Title</a></td>
                <td>@sm.Rate</td>
            </tr>
        }
        </tbody>
    </table>

   
}

@code {
    [Parameter] public int movieId  { get; set; }
    Movie _movie;
  
    [Inject]
    protected IJSRuntime JsRuntime { get; set; }

    protected override async void OnAfterRender(bool firstRender)
    {
        await JsRuntime.InvokeVoidAsync("addImages", movieId);
        base.OnAfterRender(firstRender);
    }
    
    protected override async Task OnInitializedAsync()
    {
        _movie = await MovieService.GetOne(movieId);
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await OnInitializedAsync();
    }

}